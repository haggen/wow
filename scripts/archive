#!/usr/bin/env bash

# Sane defaults.
set -euo pipefail

# Find scripts directory.
script="$0"
if test -L "$script"; then
	script="$(readlink -f "$0")"
fi
prefix="$(dirname "$script")"
script="$(basename "$script")"

# Print the manual.
help() {
	cat <<-EOF >&2
		About
		        Generate add-on archive for given release tag.

		Usage
		        $script -h
		        $script [-x] <tag>

		Flags
		        -h      Print this manual.
		        -x      Enable debug mode.
	EOF
}

# Parse and apply flags.
while getopts ":xh" option; do
	case "$option" in
		x)
			set -x
			;;
		h)
			help
			exit
			;;
		?)
			echo "$script: unknown flag '$OPTARG', try -h" >&2
			exit
			;;
	esac
done

# Drop flags by shifting arguments.
shift $((OPTIND - 1))

# Test required arguments.
if test -z "$*"; then
	echo "$script: missing required argument, see -h" >&2
	exit
fi

# Release tag, e.g. Add-on/42.
tag="$1"

# Add-on absolute path, e.g. /Add-on.
target="$("$prefix/parse-tag" -a "$tag")"

# Add-on name, e.g. Add-on.
name="$("$prefix/inspect" -n "$target")"

# Add-on archive, e.g. Add-on-v42.zip.
archive="$("$prefix/inspect" -a "$target")"

# Distributable directory, e.g. ./dist.
dist="$target/dist"

# Make sure distributable directory exists.
mkdir -p "$dist"

# Git root directory.
root="$(git rev-parse --show-toplevel)"

# Generate add-on archive.
git archive --format=zip -o "$dist/$archive" --prefix="$name/" "$tag:${target#"$root/"}"
